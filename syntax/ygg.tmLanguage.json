{
    "version": "v0.4.0",
    "scopeName": "source.ygg",
    "uuid": "6267dad2-7d52-462a-a1ef-7e3da7378a7d",
    "information_for_contributors": [
        "aster: galaster@foxmail.com"
    ],
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#grammar"
        },
        {
            "include": "#fragment"
        },
        {
            "include": "#import"
        },
        {
            "include": "#macro"
        },
        {
            "include": "#data"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.ygg",
                    "begin": "(\\/\\*)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.block.ygg"
                        }
                    },
                    "end": "(\\*\\/)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.block.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "include": "text.html.markdown"
                        }
                    ]
                },
                {
                    "name": "comment.line.ygg",
                    "begin": "(\\/\\/)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.line.ygg"
                        }
                    },
                    "end": "(?=$)"
                }
            ]
        },
        "grammar": {
            "patterns": [
                {
                    "comment": "grammar! name {\"*.ext\", }",
                    "begin": "(?<!\\w)(grammar!)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.grammar.ygg"
                        },
                        "2": {
                            "name": "variable.other.readwrite.ygg"
                        },
                        "3": {
                            "name": "punctuation.definition.dict.inline.ygg"
                        }
                    },
                    "end": "\\s*(\\})(?!\\w)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.dict.inline.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#string"
                        }
                    ]
                },
                {
                    "comment": "grammar! name",
                    "match": "(grammar!)\\s+([A-Za-z_][A-Za-z0-9_]*)(?=\\s*$)",
                    "captures": {
                        "1": {
                            "name": "keyword.control.grammar.ygg"
                        },
                        "2": {
                            "name": "entity.name.type.class.ygg"
                        }
                    }
                }
            ]
        },
        "fragment": {
            "comment": "fragment! name",
            "match": "(?<!\\w)(fragment!)\\s+([A-Za-z_][A-Za-z0-9_]*)",
            "captures": {
                "1": {
                    "name": "keyword.control.fragment.ygg"
                },
                "2": {
                    "name": "entity.name.type.class.ygg"
                }
            }
        },
        "import": {
            "patterns": [
                {
                    "comment": "grammar! name {\"*.ext\", }",
                    "begin": "(?<!\\w)(import!)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.include.ygg"
                        },
                        "2": {
                            "name": "entity.name.type.class.ygg"
                        },
                        "3": {
                            "name": "punctuation.definition.dict.inline.ygg"
                        }
                    },
                    "end": "\\s*(\\})(?!\\w)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.dict.inline.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#data"
                        }
                    ]
                },
                {
                    "match": "(?<!\\w)(import!)",
                    "name": "keyword.control.import.ygg"
                },
                {
                    "match": "(?<!\\w)(ignore!)",
                    "name": "keyword.control.ignore.ygg"
                }
            ]
        },
        "macro": {
            "patterns": [
                {
                    "comment": "@fn_name.sub()",
                    "begin": "([@][A-Za-z_][A-Za-z0-9_]*)([.][A-Za-z_][A-Za-z0-9_]*)?\\s*(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "string.regexp.set"
                        },
                        "2": {
                            "name": "string.regexp.set"
                        },
                        "3": {
                            "name": "punctuation.definition.macro.ygg"
                        }
                    },
                    "end": "(\\))",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.macro.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#macro_option"
                        },
                        {
                            "include": "#data"
                        }
                    ]
                },
                {
                    "comment": "@fn_name.sub",
                    "match": "([@][A-Za-z_][A-Za-z0-9_]*)([.][A-Za-z_][A-Za-z0-9_]*)?",
                    "captures": {
                        "1": {
                            "name": "string.regexp.set"
                        },
                        "2": {
                            "name": "string.regexp.set"
                        },
                        "3": {
                            "name": "punctuation.definition.macro.ygg"
                        }
                    }
                }
            ]
        },
        "macro_option": {
            "patterns": [
                {
                    "comment": "trailing = true",
                    "match": "([A-Za-z_][A-Za-z0-9_]*)\\s*(=)\\s*(true|false)",
                    "captures": {
                        "1": {
                            "name": "entity.name.tag.ygg"
                        },
                        "2": {
                            "name": "keyword.operator.assignment.ygg"
                        },
                        "3": {
                            "name": "constant.other.boolean.ygg"
                        }
                    }
                },
                {
                    "comment": "trailing = 1",
                    "match": "([A-Za-z_][A-Za-z0-9_]*)\\s*(=)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.assignment.ygg"
                        },
                        "2": {
                            "name": "entity.name.tag.ygg"
                        }
                    }
                }
            ]
        },
        "tag": {
            "patterns": [
                {
                    "comment": null,
                    "match": "([#])([A-Za-z_][A-Za-z0-9_]*)(!)?",
                    "captures": {
                        "1": {
                            "name": "entity.name.tag.ygg"
                        },
                        "2": {
                            "name": "entity.name.tag.ygg"
                        },
                        "3": {
                            "name": "entity.name.tag.ygg"
                        }
                    }
                },
                {
                    "comment": null,
                    "match": "([A-Za-z0-9_]*)\\s*(<-)",
                    "captures": {
                        "1": {
                            "name": "entity.name.tag.ygg"
                        },
                        "2": {
                            "name": "keyword.operator.assignment.ygg"
                        }
                    }
                },
                {
                    "comment": "^id",
                    "match": "(\\^)\\s*([A-Za-z_][A-Za-z0-9_]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.assignment.ygg"
                        },
                        "2": {
                            "name": "entity.name.tag.ygg"
                        }
                    }
                },
                {
                    "comment": null,
                    "match": "(\\&)\\s*([A-Za-z_][A-Za-z0-9_]*)",
                    "captures": {
                        "1": {
                            "name": "storage.type.ygg"
                        },
                        "2": {
                            "name": "entity.name.tag.ygg"
                        }
                    }
                },
                {
                    "comment": ": id",
                    "match": "(\\:)\\s*([A-Za-z_][A-Za-z0-9_]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.assignment.ygg"
                        },
                        "2": {
                            "name": "entity.name.type.ygg"
                        }
                    }
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "match": "(\\?)",
                    "name": "storage.type.ygg"
                },
                {
                    "match": "(\\^)",
                    "name": "keyword.operator.bind.ygg"
                },
                {
                    "match": "(\\~)",
                    "name": "storage.type.ygg"
                },
                {
                    "match": "(\\+)",
                    "name": "storage.type.ygg"
                },
                {
                    "match": "(\\*)",
                    "name": "storage.type.ygg"
                },
                {
                    "match": "(\\|)",
                    "name": "keyword.operator.or.ygg"
                },
                {
                    "match": "(=|@=|_=)",
                    "name": "keyword.operator.or.ygg"
                }
            ]
        },
        "key": {
            "patterns": [
                {
                    "name": "entity.name.tag.ygg",
                    "match": "([A-Za-z_][A-Za-z0-9_]*)"
                },
                {
                    "name": "string.key.ygg",
                    "match": "(\".*\"|'.*'|[0-9]+)"
                }
            ]
        },
        "data": {
            "patterns": [
                {
                    "include": "#tag"
                },
                {
                    "include": "#number"
                },
                {
                    "include": "#regex"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#id"
                },
                {
                    "include": "#operator"
                }
            ]
        },
        "id": {
            "patterns": [
                {
                    "comment": "id",
                    "match": "(?<!\\w)([A-Z_][A-Z0-9_]+)(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.language.predefine.ygg"
                        }
                    }
                },
                {
                    "comment": "id",
                    "match": "(?<!\\w)([A-Za-z_][A-Za-z0-9_]*)(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.ygg"
                        }
                    }
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "(?<!\\w)([\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))(?:(?:\\.(0|([1-9](([0-9]|_[0-9])+)?)))?([eE]|\\*\\*)[\\+\\-]?[1-9]_?[0-9]*|(?:\\.[0-9_]*)))([A-Za-z][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.float.ygg"
                        },
                        "10": {
                            "name": "keyword.control.handler.number.ygg"
                        },
                        "11": {
                            "name": "keyword.control.handler.number.ygg"
                        }
                    }
                },
                {
                    "match": "(?<!\\w)((?:[\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))))([A-Za-z_][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.integer.ygg"
                        },
                        "6": {
                            "name": "keyword.control.handler.number.ygg"
                        }
                    }
                }
            ]
        },
        "regex": {
            "patterns": [
                {
                    "include": "#regex_set"
                },
                {
                    "include": "#regex_range"
                },
                {
                    "comment": "/regex/ig",
                    "begin": "(\\/)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.begin.ygg"
                        }
                    },
                    "end": "(\\/)([gimsx])?",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.end.ygg"
                        },
                        "2": {
                            "name": "storage.type.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#regex_set"
                        },
                        {
                            "include": "#regex_range"
                        },
                        {
                            "include": "#regex_group"
                        },
                        {
                            "include": "#regex_item"
                        }
                    ]
                }
            ]
        },
        "regex_item": {
            "patterns": [
                {
                    "match": "(\\*|\\+|\\?)",
                    "captures": {
                        "1": {
                            "name": "storage.type.ygg"
                        }
                    }
                },
                {
                    "match": "(\\\\.)",
                    "captures": {
                        "1": {
                            "name": "constant.character.escape.regexp"
                        }
                    }
                },
                {
                    "match": "(.)",
                    "captures": {
                        "1": {
                            "name": "constant.ygg"
                        }
                    }
                }
            ]
        },
        "regex_range": {
            "comment": "[_0-9a-z\\p{white_space}]",
            "begin": "(\\[)(\\^)?",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.string.begin.ygg"
                },
                "2": {
                    "name": "punctuation.definition.string.begin.ygg"
                }
            },
            "end": "(\\])",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.ygg"
                }
            },
            "patterns": [
                {
                    "include": "#regex_set"
                },
                {
                    "include": "#regex_range_item"
                }
            ]
        },
        "regex_range_item": {
            "patterns": [
                {
                    "match": "(-)",
                    "captures": {
                        "1": {
                            "name": "storage.type.ygg"
                        }
                    }
                },
                {
                    "match": "(\\\\.)",
                    "captures": {
                        "1": {
                            "name": "constant.character.escape.regexp"
                        }
                    }
                },
                {
                    "match": "(.)",
                    "captures": {
                        "1": {
                            "name": "constant.ygg"
                        }
                    }
                }
            ]
        },
        "regex_set": {
            "match": "(\\\\p)(\\{[^\\}]+\\})",
            "captures": {
                "1": {
                    "name": "constant.character.escape.regexp"
                },
                "2": {
                    "name": "storage.type.ygg"
                }
            }
        },
        "regex_group": {
            "comment": "(1,2,3)",
            "begin": "(\\()(\\?:|\\?=)?",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.string.begin.ygg"
                },
                "2": {
                    "name": "punctuation.definition.string.begin.ygg"
                }
            },
            "end": "(\\))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.ygg"
                }
            },
            "patterns": [
                {
                    "include": "#regex_set"
                },
                {
                    "include": "#regex_range"
                },
                {
                    "include": "#regex_group"
                },
                {
                    "include": "#regex_item"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "match": "('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')",
                    "captures": {
                        "1": {
                            "name": "string.quoted.single.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\([btnfr'\\\\\\n\\/ ]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
                            "name": "constant.character.escape.ygg"
                        },
                        {
                            "match": "\\\\[^btnfr/'\\\\\\n]",
                            "name": "invalid.illegal.escape.ygg"
                        }
                    ]
                },
                {
                    "match": "(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")",
                    "captures": {
                        "1": {
                            "name": "string.quoted.single.ygg"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\([btnfr\"\\\\\\n\\/ ]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
                            "name": "constant.character.escape.ygg"
                        },
                        {
                            "match": "\\\\[^btnfr/\"\\\\\\n]",
                            "name": "invalid.illegal.escape.ygg"
                        }
                    ]
                }
            ]
        },
        "illegal": {
            "comment": "string.illegal.cover.ygg",
            "name": "invalid.illegal",
            "match": ".*"
        }
    }
}
